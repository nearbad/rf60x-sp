# -*- coding: utf-8 -*-
import serial
import time
import struct

def detect_protocol():
    print("üéØ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ RF60x")
    print("=" * 50)
    
    try:
        ser = serial.Serial('COM3', 9600, timeout=2)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ COM3")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤
        test_sequences = [
            # Modbus RTU –∫–æ–º–∞–Ω–¥—ã
            b'\x01\x03\x00\x00\x00\x01\x84\x0A',  # Read holding registers
            b'\x01\x04\x00\x00\x00\x01\x31\xCA',  # Read input registers
            
            # –ü—Ä–æ—Å—Ç—ã–µ ASCII –∫–æ–º–∞–Ω–¥—ã
            b'*IDN?\r\n',
            b'READ\r\n',
            b'MEASURE\r\n',
            b'DATA?\r\n',
            b'\r\n',
            
            # –ë–∏–Ω–∞—Ä–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
            b'\x01',  # SOH
            b'\x02',  # STX  
            b'\x05',  # ENQ
        ]
        
        for i, cmd in enumerate(test_sequences):
            print(f"\nüîß –¢–µ—Å—Ç {i+1}: –ö–æ–º–∞–Ω–¥–∞ {cmd.hex()}")
            try:
                ser.write(cmd)
                ser.flush()
                time.sleep(1)
                
                if ser.in_waiting > 0:
                    response = ser.read(ser.in_waiting)
                    print(f"   ‚úÖ –û—Ç–≤–µ—Ç: {response.hex()}")
                    
                    # –ê–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–∞
                    if len(response) == 1:
                        print(f"      –û–¥–∏–Ω –±–∞–π—Ç: {response[0]:02x}")
                    elif len(response) >= 4:
                        # –ü—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ float
                        try:
                            value = struct.unpack('<f', response[:4])[0]
                            print(f"      –ö–∞–∫ float: {value}")
                        except:
                            pass
                    
                    # –ü—Ä–æ–±—É–µ–º –∫–∞–∫ —Ç–µ–∫—Å—Ç
                    try:
                        text = response.decode('ascii').strip()
                        if text:
                            print(f"      –ö–∞–∫ —Ç–µ–∫—Å—Ç: '{text}'")
                    except:
                        pass
                else:
                    print("   ‚ùå –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞")
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    finally:
        if 'ser' in locals() and ser.is_open:
            ser.close()

if __name__ == "__main__":
    detect_protocol()
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")