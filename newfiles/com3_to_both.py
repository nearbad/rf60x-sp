# -*- coding: utf-8 -*-
import serial
import time
import threading

class COM3ToBothBridge:
    def __init__(self):
        self.running = True
        
    def start_bridge(self):
        print("üöÄ –ó–∞–ø—É—Å–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –º–æ—Å—Ç–∞ COM3 ‚Üí COM4 + COM5")
        
        try:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –ø–æ—Ä—Ç—ã
            self.com3 = serial.Serial('COM3', 9600, timeout=1)  # –†–µ–∞–ª—å–Ω—ã–π –¥–∞—Ç—á–∏–∫
            self.com4 = serial.Serial('COM4', 9600, timeout=1)  # –î–ª—è RF60x-SP
            self.com5 = serial.Serial('COM5', 9600, timeout=1)  # –î–ª—è –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
            
            print("‚úÖ –í—Å–µ –ø–æ—Ä—Ç—ã –æ—Ç–∫—Ä—ã—Ç—ã:")
            print("   COM3 - —Ä–µ–∞–ª—å–Ω—ã–π –¥–∞—Ç—á–∏–∫")
            print("   COM4 - –¥–ª—è RF60x-SP") 
            print("   COM5 - –¥–ª—è Python –ø—Ä–æ–≥—Ä–∞–º–º—ã")
            
            # –ü–æ—Ç–æ–∫: COM3 ‚Üí COM4 + COM5
            thread1 = threading.Thread(target=self.broadcast_from_com3)
            # –ü–æ—Ç–æ–∫: COM4 ‚Üí COM3 (–∫–æ–º–∞–Ω–¥—ã –æ—Ç RF60x-SP)
            thread2 = threading.Thread(target=self.forward_to_com3, args=(self.com4, "COM4"))
            # –ü–æ—Ç–æ–∫: COM5 ‚Üí COM3 (–∫–æ–º–∞–Ω–¥—ã –æ—Ç –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã)
            thread3 = threading.Thread(target=self.forward_to_com3, args=(self.com5, "COM5"))
            
            for thread in [thread1, thread2, thread3]:
                thread.daemon = True
                thread.start()
            
            print("üì° –ú–æ—Å—Ç –∑–∞–ø—É—â–µ–Ω! –î–∞–Ω–Ω—ã–µ –¥—É–±–ª–∏—Ä—É—é—Ç—Å—è:")
            print("   COM3 ‚Üí COM4 + COM5")
            print("   COM4 ‚Üí COM3")
            print("   COM5 ‚Üí COM3")
            print("   –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
            
            while self.running:
                time.sleep(0.1)
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            self.stop_bridge()
    
    def broadcast_from_com3(self):
        """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å COM3 –Ω–∞ COM4 –∏ COM5"""
        while self.running:
            try:
                if self.com3.in_waiting > 0:
                    data = self.com3.read(self.com3.in_waiting)
                    if self.com4.is_open:
                        self.com4.write(data)
                    if self.com5.is_open:
                        self.com5.write(data)
                    if len(data) > 0:
                        print(f"COM3‚ÜíCOM4+COM5: {len(data)} –±–∞–π—Ç")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ broadcast: {e}")
                time.sleep(0.1)
    
    def forward_to_com3(self, source, source_name):
        """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ COM3"""
        while self.running:
            try:
                if source.in_waiting > 0:
                    data = source.read(source.in_waiting)
                    if self.com3.is_open:
                        self.com3.write(data)
                    if len(data) > 0:
                        print(f"{source_name}‚ÜíCOM3: {len(data)} –±–∞–π—Ç")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ {source_name}‚ÜíCOM3: {e}")
                time.sleep(0.1)
    
    def stop_bridge(self):
        self.running = False
        for port, name in [(self.com3, "COM3"), (self.com4, "COM4"), (self.com5, "COM5")]:
            if port and port.is_open:
                port.close()
                print(f"üîå {name} –∑–∞–∫—Ä—ã—Ç")
        print("üõë –ú–æ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def main():
    bridge = COM3ToBothBridge()
    try:
        bridge.start_bridge()
    except KeyboardInterrupt:
        print("\n‚èπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        bridge.stop_bridge()

if __name__ == "__main__":
    main()